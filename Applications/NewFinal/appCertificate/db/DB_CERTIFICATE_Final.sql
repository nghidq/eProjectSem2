CREATE DATABASE DBTEST_CER
GO
USE DBTEST_CER
GO
CREATE TABLE USERS(
	USERS_ID VARCHAR(20) PRIMARY KEY,
	USERNAME NVARCHAR(40) NOT NULL,
	PASSWORDS NVARCHAR(40) NOT NULL,
	FULLNAME NVARCHAR(100) NOT NULL,
	GENDER NVARCHAR(10) NOT NULL,
	DOB DATE NOT NULL,
	PHONE VARCHAR(20) NOT NULL UNIQUE,
	EMAIL NVARCHAR(40) NOT NULL,
	ROLES NVARCHAR(40) NOT NULL,
	USERS_ADD NVARCHAR(100) NOT NULL,
	--CONSTRAINT CHECK_DOB CHECK(CONVERT(DATE,DOB,101) <= CONVERT(DATE,(GETDATE()-5475),101))
	--CONSTRAINT CHECK_DOB CHECK(DATEDIFF(YEAR,CONVERT(DATE,DOB,101), GETDATE()) = 15)
	--CONSTRAINT CHECK_DOB_USER CHECK(YEAR(CONVERT(VARCHAR(32),DOB,101)) <= YEAR(GETDATE())-24)
)
GO
--SELECT CONVERT(VARCHAR(100), HASHBYTES('MD5', PASSWORDS),2) AS PASSWORDS FROM USERS
--SELECT ENCRYPTBYPASSPHRASE('12',PASSWORDS) AS PASSWORDS FROM USERS
GO
--(USERS_ID,USERNAME,PASSWORDS,FULLNAME,GENDER,DOB,PHONE,EMAIL,USERS_ADD)
INSERT [dbo].[USERS]([USERS_ID],[USERNAME], [PASSWORDS], [FULLNAME], [GENDER], [DOB], [PHONE], [EMAIL], [ROLES], [USERS_ADD]) 
VALUES(N'US1', N'DQNGHI', N'12345', N'NGHI DANG QUANG', N'FEMALE', N'1988-01-13', 903148188, N'DQNGHI26@GMAIL.COM',N'Admin', N'CAN THO')
INSERT INTO USERS VALUES(N'US2','NLKHANH','12345','KHANH NGUYEN LE','FEMALE','12/03/1990',903148189,'NLKHANH@GMAIL.COM',N'Staff', N'CAN THO')
INSERT INTO USERS VALUES(N'US3','TTTHANG','12345','THANG TO TOAN','MALE','12/03/1990',903148189,'TTTHANG@GMAIL.COM',N'Keeper', N'CAN THO')
INSERT INTO USERS VALUES(N'US4','NPTHANH','12345','THANH NGUYEN PHUC','FEMALE','12/03/1990',903123456,'NPTHANH@GMAIL.COM',N'Admin', N'CAN THO')
GO
-- PROCEDURE ID USERS
CREATE PROC sp_USERS_identityID
AS
BEGIN
DECLARE @UID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(USERS_ID)+1 FROM USERS WHERE USERS_ID LIKE 'US'
SET @UID= 'US' + RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
WHILE(EXISTS(SELECT USERS_ID FROM USERS WHERE USERS_ID=@UID))
BEGIN
	SET @max=@max+1
	SET @UID='US'+ RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
END
SELECT @UID
END
GO
CREATE TABLE STUDENTS(
	STUDENT_ID NVARCHAR(20) PRIMARY KEY,
	STUDENT_NAME NVARCHAR(100) NOT NULL,
	IDENTITY_CARD VARCHAR(20) NOT NULL UNIQUE,
	DOB DATE NOT NULL,
	GENDER NVARCHAR(10) NOT NULL,
	PHONE VARCHAR(20) NOT NULL UNIQUE,
	EMAIL NVARCHAR(20) NOT NULL,
	STUDENT_ADD NVARCHAR(100) NOT NULL,
	--CONSTRAINT CHECK_DOB_STUDENT CHECK(YEAR(CONVERT(DATE,DOB,101)) <= YEAR(GETDATE())-6)
)
GO
-- PROCEDURE ID STUDENTS
CREATE PROC sp_STUDENTS_identityID
AS
BEGIN
DECLARE @STUID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(STUDENT_ID)+1 FROM STUDENTS WHERE STUDENT_ID LIKE 'STU'
SET @STUID= 'STU' + RIGHT('' + CAST( @max AS NVARCHAR(8)),8)
WHILE(EXISTS(SELECT STUDENT_ID FROM STUDENTS WHERE STUDENT_ID =@STUID))
BEGIN
	SET @max=@max+1
	SET @STUID='STU'+ RIGHT('' + CAST( @max AS NVARCHAR(8)),8)
END
SELECT @STUID
END
GO
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU1', N'Le Van Quyet', 302980780, CAST(N'1990-12-12' AS Date), N'Male', 905682594, N'quyet@gmail.com', N'Can Tho')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU2', N'Nguyen Thi Tam', 302980781, CAST(N'1991-01-01' AS Date), N'Female', 905682595, N'tam@gmail.com', N'Vinh Long')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD])
VALUES (N'STU3', N'Doan Van Chien', 302980782, CAST(N'1992-03-20' AS Date), N'Male', 905682596, N'chien@gmail.com', N'Dong Thap')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU4', N'Tran Van Dau', 302980783, CAST(N'1993-04-23' AS Date), N'Male', 905682597, N'dau@gmail.com', N'An Giang')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU5', N'Le Thi Chac', 302980784, CAST(N'1989-08-06' AS Date), N'Female', 905682598, N'chac@gmail.com', N'Long An')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU6', N'Pham Van Chan', 302980785, CAST(N'1995-12-04' AS Date), N'Male', 905682599, N'chan@gmail.com', N'Tien Giang')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU7', N'Pham Nhat', 302980786, CAST(N'1999-11-07' AS Date), N'Female', 905682600, N'nhat@gmail.com', N'Ca Mau')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU8', N'Nguyen Khai Dinh', 302980787, CAST(N'2000-04-05' AS Date), N'Male', 905682601, N'dinh@gmail.com', N'Bac Lieu')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU9', N'Ly Van Thang', 302980788, CAST(N'1996-08-09' AS Date), N'Female', 905682602, N'thang@gmail.com', N'Soc Trang')
INSERT [dbo].[STUDENTS] ([STUDENT_ID], [STUDENT_NAME], [IDENTITY_CARD], [DOB], [GENDER], [PHONE], [EMAIL], [STUDENT_ADD]) 
VALUES (N'STU10', N'Nguyen Thi Loi', 302980789, CAST(N'1994-12-07' AS Date), N'Male', 905682603, N'loi@gmail.com', N'Tra Vinh')
GO
CREATE TABLE COURSES(
	EXAM_DATE DATE PRIMARY KEY,
	COURSE_NAME NVARCHAR(100) NOT NULL	
)
GO
SELECT B.STUDENT_ID, B.STUDENT_NAME, C.CERTIFICATE_ID, C.CERTIFICATE_NAME, A.EXAM_DATE, A.ID_NUM
                FROM STUDENT_CER A, STUDENTS B, CERTIFICATED C, COURSES S
                WHERE A.STUDENT_ID = B.STUDENT_ID AND A.CERTIFICATE_ID = C.CERTIFICATE_ID AND A.EXAM_DATE = S.EXAM_DATE
GO
CREATE PROCEDURE sp_UpdateExam_Date
AS
BEGIN
DECLARE @Name NVARCHAR(100);
DECLARE @ID_NEW DATE;
DECLARE @ID DATE;
	UPDATE COURSES SET
                COURSE_NAME = @NAME,
				EXAM_DATE = @ID_NEW
                WHERE EXAM_DATE = @ID
END
GO
INSERT INTO COURSES VALUES(N'2020-01-14','THIS IS COURSE A, B, C ... ENGLISH')
INSERT INTO COURSES VALUES(N'2020-01-01','THIS IS COURSE A, B, C ... FRANCE')
INSERT INTO COURSES VALUES(N'2020-03-01','THIS IS COURSE C# PROGRAMMER')
INSERT INTO COURSES VALUES(N'2020-01-30','THIS IS COURSE Java PROGRAMMER')
INSERT INTO COURSES VALUES(N'2020-01-20','THIS IS COURSE Java PROGRAMMER')
GO
CREATE TABLE CERTIFICATED(
	CERTIFICATE_ID NVARCHAR(20),
	CERTIFICATE_NAME NVARCHAR(100) NOT NULL,
	CERTIFICATE_NUM NVARCHAR(20) NOT NULL,
	CONSTRAINT PK_CER PRIMARY KEY(CERTIFICATE_ID)
)
GO
--https://www.c-sharpcorner.com/UploadFile/ff2f08/auto-incremented-column-with-varchar-and-nvarchar-data-type/
CREATE PROCEDURE sp_InsertCERTIFICATE_ABC
 @Name VARCHAR(MAX)
AS
BEGIN
 DECLARE @NewCerID VARCHAR(20);
 DECLARE @PreFix VARCHAR(10) = 'CER';
 DECLARE @num VARCHAR(20);
 DECLARE @max INT;
--SELECT @Id = ISNULL(0,MAX(CERTIFICATE_NUM)) + 1 FROM CERTIFICATED
	SELECT @max=COUNT(CERTIFICATE_NUM)+1 FROM CERTIFICATED
 SELECT @NewCerID = @PreFix + RIGHT('' + CAST(@max AS VARCHAR(7)), 7)
 SELECT @num = LEFT(CAST(@NAME AS VARCHAR(7)),7)+ LEFT('' + CAST(@max AS VARCHAR(7)), 7)
INSERT INTO CERTIFICATED VALUES (@NewCerID,@Name,@num)
END
GO
EXEC sp_InsertCERTIFICATE_ABC 'ENGLISH LEVEL A'
GO
EXEC sp_InsertCERTIFICATE_ABC 'ENGLISH LEVEL B'
GO
EXEC sp_InsertCERTIFICATE_ABC 'ENGLISH LEVEL C'
GO
EXEC sp_InsertCERTIFICATE_ABC 'ENGLISH LEVEL TOIEC'
GO
EXEC sp_InsertCERTIFICATE_ABC 'COMPUTER MAINTAINMENT'
GO
EXEC sp_InsertCERTIFICATE_ABC 'PROGRAMMING PHP LEVEL ADVANDTED'
GO
-- PROCEDURE ID CERTIFICATE
CREATE PROC sp_CERTIFICATE_identityID
AS
BEGIN
DECLARE @CERID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(CERTIFICATE_ID)+1 FROM CERTIFICATED WHERE CERTIFICATE_ID LIKE 'CER'
SET @CERID= 'CER' + RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
WHILE(EXISTS(SELECT CERTIFICATE_ID FROM CERTIFICATED WHERE CERTIFICATE_ID=@CERID))
BEGIN
	SET @max=@max+1
	SET @CERID='CER'+ RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
END
SELECT @CERID
END
GO
CREATE PROCEDURE sp_UpdateCERTIFICATE_ABC
 @Name VARCHAR(MAX)
AS
BEGIN
 DECLARE @NewCerID VARCHAR(20);
 DECLARE @PreFix VARCHAR(10) = 'CER';
 DECLARE @num VARCHAR(20);
 DECLARE @max INT;
--SELECT @Id = ISNULL(0,MAX(CERTIFICATE_NUM)) + 1 FROM CERTIFICATED
	SELECT @max=COUNT(CERTIFICATE_NUM)+1 FROM CERTIFICATED
 SELECT @NewCerID = @PreFix + RIGHT('' + CAST(@max AS VARCHAR(7)), 7)
 SELECT @num = LEFT(CAST(@NAME AS VARCHAR(7)),7)+ LEFT('' + CAST(@max AS VARCHAR(7)), 7)
UPDATE CERTIFICATED SET CERTIFICATE_NAME = @Name
WHERE CERTIFICATE_ID = @NewCerID
END
GO
CREATE PROCEDURE sp_UpdateCER_NAME
@ID NVARCHAR(20)
AS
BEGIN
DECLARE @Name NVARCHAR(100);
SET @Name = replace(replace(replace(convert(Nvarchar(16),CURRENT_TIMESTAMP,120),'-',''),' ',''),':','')+convert(Nvarchar(24),@ID)
--PRINT @Confirmation
    SET NOCOUNT ON; -- prevent rowcount messages
    UPDATE CERTIFICATED SET CERTIFICATE_NAME = @Name
    WHERE CERTIFICATE_ID = @ID;
    --RETURN @Confirmation
    SET NOCOUNT OFF; -- re-enable for the following select
    SELECT @Name;   -- this is the value you get
END
GO
CREATE TABLE STUDENT_CER(
	STUDENT_ID NVARCHAR(20),
	CERTIFICATE_ID NVARCHAR(20),
	EXAM_DATE DATE,
	ID_NUM NVARCHAR(20) NOT NULL UNIQUE,
	AVG_MARK FLOAT,
	RESULT NVARCHAR(20),
	CONSTRAINT PK_STUDENT_CER PRIMARY KEY(STUDENT_ID,CERTIFICATE_ID,EXAM_DATE),
	CONSTRAINT FK_STUDENT_CER_STUDENTID FOREIGN KEY(STUDENT_ID) 
	REFERENCES STUDENTS(STUDENT_ID) 	
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_STUDENTCER_CERTIFICATEID 
	FOREIGN KEY(CERTIFICATE_ID) REFERENCES CERTIFICATED(CERTIFICATE_ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_COURSE_EXAM_DATE 
	FOREIGN KEY(EXAM_DATE) REFERENCES COURSES(EXAM_DATE)
	ON DELETE CASCADE
	ON UPDATE CASCADE
	--CONSTRAINT CHECK_EXAMDATE CHECK (DATEDIFF(dd,GETDATE(),CONVERT(DATE,EXAM_DATE,101))>=30 and DATEDIFF(dd,GETDATE(),CONVERT(DATE,EXAM_DATE,101))<=365)
)
GO
CREATE PROC sp_STUDENT_CER_identityID_NUM
AS
BEGIN
DECLARE @ID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(ID_NUM)+1 FROM STUDENT_CER WHERE ID_NUM LIKE 'No'
SET @ID= 'No' + RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
WHILE(EXISTS(SELECT ID_NUM FROM STUDENT_CER WHERE ID_NUM=@ID))
BEGIN
	SET @max=@max+1
	SET @ID='No'+ RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
END
SELECT @ID
END
GO
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU1', N'CER1', CAST(N'2020-01-14' AS Date), N'No1', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU1', N'CER1', CAST(N'2020-01-20' AS Date), N'No2', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU2', N'CER2', CAST(N'2020-01-14' AS Date), N'No3', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU3', N'CER3', CAST(N'2020-01-30' AS Date), N'No4', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU4', N'CER4', CAST(N'2020-01-14' AS Date), N'No5', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT])  
VALUES (N'STU4', N'CER4', CAST(N'2020-01-30' AS Date), N'No6', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT])  
VALUES (N'STU4', N'CER4', CAST(N'2020-03-01' AS Date), N'No7', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU5', N'CER5', CAST(N'2020-01-20' AS Date), N'No8', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU6', N'CER1', CAST(N'2020-03-01' AS Date), N'No9', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU6', N'CER2', CAST(N'2020-01-14' AS Date), N'No10', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU7', N'CER2', CAST(N'2020-03-01' AS Date), N'No11', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU8', N'CER3', CAST(N'2019-12-30' AS Date), N'No12', N'', N'')
INSERT [dbo].[STUDENT_CER] ([STUDENT_ID], [CERTIFICATE_ID], [EXAM_DATE],[ID_NUM], [AVG_MARK], [RESULT]) 
VALUES (N'STU9', N'CER4', CAST(N'2020-03-01' AS Date), N'No13', N'', N'')
GO

CREATE TABLE CER_MANAGER(
	NO_ID NVARCHAR(20),
	ID_NUM NVARCHAR(20) UNIQUE NOT NULL,
	CONSTRAINT PK_CER_MANAGER PRIMARY KEY(NO_ID),
	CONSTRAINT FK_CER_MANAGER_STUDENT_CER FOREIGN KEY(ID_NUM) REFERENCES STUDENT_CER(ID_NUM)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
)
GO
-- PROCEDURE ID CER_MANAGER
CREATE PROC sp_CER_MANAGER_identityID
AS
BEGIN
DECLARE @NOID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(NO_ID)+1 FROM CER_MANAGER WHERE NO_ID LIKE 'CERNo'
SET @NOID= 'CERNo' + RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
WHILE(EXISTS(SELECT NO_ID FROM CER_MANAGER WHERE NO_ID=@NOID))
BEGIN
	SET @max=@max+1
	SET @NOID='CERNo'+ RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
END
SELECT @NOID
END
GO
INSERT INTO CER_MANAGER VALUES('CERNo1','No12')
INSERT INTO CER_MANAGER VALUES('CERNo2','No6')
INSERT INTO CER_MANAGER VALUES('CERNo3','No7')
INSERT INTO CER_MANAGER VALUES('CERNo4','No8')
GO
SELECT C.NO_ID,B.STUDENT_ID, B.STUDENT_NAME, C.ID_NUM, D.CERTIFICATE_NAME 
FROM STUDENT_CER A, STUDENTS B, CER_MANAGER C, CERTIFICATED D
WHERE C.STUDENT_ID = B.STUDENT_ID AND C.ID_NUM  = A.ID_NUM AND A.CERTIFICATE_ID = D.CERTIFICATE_ID
GO
DELETE FROM CER_MANAGER WHERE NO_ID LIKE 'CERNo1' 
GO
CREATE TABLE DETAIL_CERTIFICATE(
	SUBJECT_ID NVARCHAR(20) PRIMARY KEY,
	SUBJECT_NAME NVARCHAR(100) NOT NULL,
	CERTIFICATE_ID NVARCHAR(20),
	CONSTRAINT FK_DETAIL_CERTIFICATE FOREIGN KEY(CERTIFICATE_ID) 
	REFERENCES CERTIFICATED(CERTIFICATE_ID) 
	ON DELETE CASCADE
	ON UPDATE CASCADE
)
GO
-- PROCEDURE ID DETAIL_CERTIFICATE
CREATE PROC sp_DETAIL_CERTIFICATE_identityID
AS
BEGIN
DECLARE @SBJID NVARCHAR(20)
DECLARE @max INT
SELECT @max=COUNT(b.SUBJECT_ID)+1 FROM CERTIFICATED a,DETAIL_CERTIFICATE b
WHERE SUBJECT_ID LIKE 'SBJ' AND a.CERTIFICATE_ID = b.CERTIFICATE_ID
SET @SBJID= 'SBJ' + RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
WHILE(EXISTS(SELECT SUBJECT_ID FROM DETAIL_CERTIFICATE WHERE SUBJECT_ID = @SBJID))
BEGIN
	SET @max=@max+1
	SET @SBJID='SBJ'+ RIGHT('' + CAST( @max AS NVARCHAR(10)),10)
END
SELECT @SBJID
END
GO
CREATE PROC sp_RESULT_EXAM
AS
BEGIN
	UPDATE STUDENT_CER
	SET STUDENT_CER.RESULT=NULL
END
GO
CREATE PROC sp_RESULT_EXAM1
AS
BEGIN
	UPDATE STUDENT_CER
SET STUDENT_CER.RESULT=case
                  when KQ.DIEMTB >=7 then 'A'
                  when KQ.DIEMTB >=6 then 'B'
				  when KQ.DIEMTB >=4 then 'C'
				  else null end
		FROM STUDENT_CER AS SC,
							(SELECT sc.ID_NUM,avg(e.MARK) as DIEMTB 
							FROM EXAM_MARK AS e, STUDENT_CER AS sc,
-- Truy van nhung thi sinh co diem trung binh >=4.
											(SELECT sc.ID_NUM 
											FROM EXAM_MARK AS e, STUDENT_CER AS sc
											WHERE 
												e.ID_NUM=sc.ID_NUM
											Group by sc.ID_NUM
											HAVING avg(e.MARK) >=4
										except
-- Truy van nhung thi sinh 1 diem bat ky <4.
											SELECT sc.ID_NUM
											FROM EXAM_MARK AS e, STUDENT_CER AS sc
											WHERE e.ID_NUM=sc.ID_NUM
											AND e.MARK<4) as T
								WHERE 
									T.ID_NUM=sc.ID_NUM
									and e.ID_NUM=sc.ID_NUM
									Group by sc.ID_NUM
									HAVING avg(e.MARK) >=4) AS KQ
									WHERE SC.ID_NUM=KQ.ID_NUM  -- Dieu kien de cap nhat ket qua vao STUDENT_CER
-- Cap nhat diem thi TB cho bang STUDENT_CER
END
GO
CREATE PROC sp_RESULT_EXAM2
AS
BEGIN
	UPDATE STUDENT_CER
	SET STUDENT_CER.AVG_MARK=NULL
END
GO
CREATE PROC sp_RESULT_EXAM3
AS
BEGIN
	UPDATE STUDENT_CER 
	SET STUDENT_CER.AVG_MARK=KQ.DIEMTB
	FROM STUDENT_CER AS SC,
	(SELECT sc.ID_NUM, AVG(e.MARK) as DIEMTB
	FROM EXAM_MARK AS e, STUDENT_CER AS sc
	WHERE 
	e.ID_NUM=sc.ID_NUM
	GROUP BY sc.ID_NUM)
	 AS KQ
	WHERE SC.ID_NUM=KQ.ID_NUM
END
GO
CREATE PROC sp_RESULT_EXAM4
AS
BEGIN
	SELECT A.STUDENT_ID, B.STUDENT_NAME, A.CERTIFICATE_ID, 
	C.CERTIFICATE_NAME, A.EXAM_DATE, A.ID_NUM, A.AVG_MARK, A.RESULT
    FROM STUDENT_CER A, STUDENTS B, CERTIFICATED C
    WHERE B.STUDENT_ID = A.STUDENT_ID AND A.CERTIFICATE_ID = C.CERTIFICATE_ID
	AND A.RESULT IS NOT NULL
END
GO
SELECT A.STUDENT_ID, B.STUDENT_NAME, A.CERTIFICATE_ID, 
	C.CERTIFICATE_NAME, A.EXAM_DATE, A.ID_NUM
	 FROM STUDENT_CER A, STUDENTS B, CERTIFICATED C
WHERE B.STUDENT_ID = A.STUDENT_ID AND A.CERTIFICATE_ID = C.CERTIFICATE_ID AND A.RESULT IS NULL
GO
SELECT c.CERTIFICATE_NAME, s.STUDENT_NAME, s.DOB,s.STUDENT_ADD, sc.EXAM_DATE, sc.RESULT,cm.NO_ID, sc.ID_NUM
               FROM CER_MANAGER AS cm, STUDENTS AS s, CERTIFICATED AS c, STUDENT_CER AS sc
               WHERE cm.ID_NUM=sc.ID_NUM
                AND s.STUDENT_ID=sc.STUDENT_ID
                AND c.CERTIFICATE_ID=sc.CERTIFICATE_ID
                AND sc.RESULT IS NOT NULL
GO
SELECT A.STUDENT_ID, B.STUDENT_NAME FROM STUDENT_CER A, STUDENTS B
 WHERE A.STUDENT_ID = B.STUDENT_ID
 GROUP BY A.STUDENT_ID, B.STUDENT_NAME
GO
SELECT A.ID_NUM, B.CERTIFICATE_NAME FROM STUDENT_CER A, CERTIFICATED B
 WHERE A.CERTIFICATE_ID = B.CERTIFICATE_ID AND A.RESULT IS NOT NULL
 GROUP BY A.ID_NUM, B.CERTIFICATE_NAME
GO
CREATE PROC sp_RESULT_PASS
AS
BEGIN
SELECT COUNT(KQ.ID_NUM) AS SUM_PASS FROM (SELECT A.STUDENT_ID, B.STUDENT_NAME, A.CERTIFICATE_ID, 
	C.CERTIFICATE_NAME, A.EXAM_DATE, A.ID_NUM, A.AVG_MARK, A.RESULT
    FROM STUDENT_CER A, STUDENTS B, CERTIFICATED C
    WHERE B.STUDENT_ID = A.STUDENT_ID AND A.CERTIFICATE_ID = C.CERTIFICATE_ID
	AND A.RESULT IS NOT NULL) AS KQ
END
GO
CREATE PROC sp_RESULT_FAIL
AS
BEGIN
SELECT COUNT(KQ.ID_NUM) AS SUM_PASS FROM (SELECT A.STUDENT_ID, B.STUDENT_NAME, A.CERTIFICATE_ID, 
	C.CERTIFICATE_NAME, A.EXAM_DATE, A.ID_NUM, A.AVG_MARK, A.RESULT
    FROM STUDENT_CER A, STUDENTS B, CERTIFICATED C
    WHERE B.STUDENT_ID = A.STUDENT_ID AND A.CERTIFICATE_ID = C.CERTIFICATE_ID
	AND A.RESULT IS NULL) AS KQ
END
GO
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ1', N'Listening A', N'CER1')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ2', N'Speaking A', N'CER1')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ3', N'Reading A', N'CER1')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ4', N'Writing A', N'CER1')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ5', N'Listening B', N'CER2')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ6', N'Speaking C', N'CER3')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ7', N'Reading D', N'CER4')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ8', N'Writing D', N'CER4')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ9', N'Listening TOIEC', N'CER5')
INSERT [dbo].[DETAIL_CERTIFICATE] ([SUBJECT_ID], [SUBJECT_NAME], [CERTIFICATE_ID]) 
VALUES (N'SBJ10', N'Speaking IELTS', N'CER6')
GO
CREATE TABLE EXAM_MARK(
	SUBJECT_ID NVARCHAR(20),
	ID_NUM NVARCHAR(20) NOT NULL,
	MARK FLOAT NULL,
	CONSTRAINT PK_EXAMMARK PRIMARY KEY(ID_NUM,SUBJECT_ID),
	CONSTRAINT FK_EXAMMARK_STUDENT_CER FOREIGN KEY(ID_NUM) REFERENCES STUDENT_CER(ID_NUM)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_EXAMMARK_SUBJECTID FOREIGN KEY(SUBJECT_ID) REFERENCES DETAIL_CERTIFICATE(SUBJECT_ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE
)
GO
SELECT E.SUBJECT_ID, D.SUBJECT_NAME, E.ID_NUM, S.STUDENT_NAME, E.MARK 
FROM EXAM_MARK E, STUDENTS S, DETAIL_CERTIFICATE D, STUDENT_CER C
WHERE S.STUDENT_ID = C.STUDENT_ID AND C.ID_NUM = E.ID_NUM AND D.SUBJECT_ID = E.SUBJECT_ID 
GO
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No1', N'SBJ1', 5)
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No2', N'SBJ3', 3)
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No5', N'SBJ7', 3)
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No5', N'SBJ8', 4) 
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No12', N'SBJ3', 9)
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No12', N'SBJ4', 7)
INSERT [dbo].[EXAM_MARK] ([ID_NUM], [SUBJECT_ID], [MARK]) 
VALUES (N'No4', N'SBJ7', 8)





