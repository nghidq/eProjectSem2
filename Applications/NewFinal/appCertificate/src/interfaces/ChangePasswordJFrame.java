/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import aplication.Login;
import database.DBconnect;
import database.MD5Password;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author David Nghi
 */
public class ChangePasswordJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ChangePasswordJFrame
     */
    static Connection conn;
    public static Login lg = new Login();

    private void loadUsername() {
        cbtUsername.removeAllItems();
        DBconnect.loadDataCombobox("SELECT * FROM USERS WHERE ROLES NOT IN (SELECT ROLES FROM USERS WHERE ROLES = 'ADMIN') ", this.cbtUsername, "USERNAME");
        String query = "SELECT * FROM USERS WHERE ROLES NOT IN (SELECT ROLES FROM USERS WHERE ROLES = 'ADMIN') AND USERNAME = ?";
        DBconnect.loadDataTextfield(query, this.cbtUsername, this.txtpassCurrent, "PASSWORDS");
    }

    private void checkCurrentPassword() throws SQLException {
        DBconnect.getConnect();
        try {
            String newPass = String.valueOf(txtpassNew.getPassword());
            //String newPassMD5 = MD5Password.mdFivePass(newPass);
            String confPass = String.valueOf(txtConfirmPass.getPassword());
            //String confPassMD5 = MD5Password.mdFivePass(confPass);
            String oldPass = String.valueOf(txtpassCurrent.getPassword());
            // String oldPassMD5 = MD5Password.mdFivePass(oldPass);
            String username = cbtUsername.getSelectedItem().toString();
            //System.out.println(username);
            if (username.length() == 0) {
                JOptionPane.showMessageDialog(this, "Please enter a username",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (oldPass.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a old password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (newPass.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a new password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (confPass.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a confirmed password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (newPass.length() < 5) {
                JOptionPane.showMessageDialog(this,
                        "The New Password Should be of Atleast 5 Characters",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if ((newPass).equals(oldPass)) {
                JOptionPane.showMessageDialog(this,
                        "Password is same..Re-enter new password", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(newPass).equals(confPass)) {
                JOptionPane.showMessageDialog(this,
                        "New Password doesn't match with Confirmed Password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            ResultSet rs = lg.showKeeper(username, oldPass);
            while (rs.next()) {
                String userU = rs.getString("USERNAME").trim();
                String passU = rs.getString("PASSWORDS").trim();
                if (username.equals(userU) && oldPass.equals(passU)) {

                    lg.editDataChange(username, oldPass, newPass);
                    jLabelNotify.setVisible(true);
                    JOptionPane.showMessageDialog(this, "Password Successfully Changed");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "invalid user name or password", "Error", JOptionPane.ERROR_MESSAGE);
                    cbtUsername.setSelectedItem("");
                    txtpassCurrent.setText("");
                    txtpassNew.setText("");
                    txtConfirmPass.setText("");

                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    public ChangePasswordJFrame() throws SQLException {
        initComponents();
        //checkCurrentPassword();
        jLabelNotify.setVisible(false);
        loadUsername();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNotify = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtpassCurrent = new javax.swing.JPasswordField();
        txtpassNew = new javax.swing.JPasswordField();
        btnChange = new javax.swing.JButton();
        btnChange1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbtUsername = new javax.swing.JComboBox<>();
        txtConfirmPass = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("New password:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelNotify.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabelNotify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/notify.png"))); // NOI18N
        jLabelNotify.setText("Notify: Your password has changed Successfully");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabelNotify)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelNotify)
                .addGap(29, 29, 29))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/password.png"))); // NOI18N
        jLabel1.setText("Current password:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/passwordnew.png"))); // NOI18N
        jLabel2.setText("New password:");

        txtpassCurrent.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txtpassCurrent.setText("jPasswordField1");

        txtpassNew.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txtpassNew.setText("jPasswordField1");

        btnChange.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/change.png"))); // NOI18N
        btnChange.setText("Change");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnChange1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnChange1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        btnChange1.setText("Close");
        btnChange1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChange1MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/user.png"))); // NOI18N
        jLabel3.setText("Username Change");

        cbtUsername.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cbtUsername.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbtUsernamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        txtConfirmPass.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtConfirmPass.setText("jPasswordField1");
        txtConfirmPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmPassKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/passwordconfirm.png"))); // NOI18N
        jLabel5.setText("Confirm password:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnChange)
                .addGap(69, 69, 69)
                .addComponent(btnChange1)
                .addGap(89, 89, 89))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtConfirmPass)
                    .addComponent(txtpassCurrent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(cbtUsername, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtpassNew, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cbtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtpassCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtpassNew, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChange1)
                    .addComponent(btnChange))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChange1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChange1MouseClicked
        // TODO add your handling code here:
        
        this.dispose();
        try {
                new MarkEntryJFrame().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(ChangePasswordJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnChange1MouseClicked

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed

        try {

            String newPass = txtpassNew.getText();
           // String newPassMD5 = MD5Password.mdFivePass(newPass);
            String confPass = txtConfirmPass.getText();
            //String confPassMD5 = MD5Password.mdFivePass(confPass);
            String oldPass = txtpassCurrent.getText();
          // String oldPassMD5 = MD5Password.mdFivePass(oldPass);
            String username = cbtUsername.getSelectedItem().toString();

            if (username.length() == 0) {
                JOptionPane.showMessageDialog(this, "Please enter a username",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (oldPass.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a old password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (newPass.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a new password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (confPass.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a confirmed password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if (newPass.length() < 5) {
                JOptionPane.showMessageDialog(this,
                        "The New Password Should be of Atleast 5 Characters",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else if ((newPass).equals(oldPass)) {
                JOptionPane.showMessageDialog(this,
                        "Password is same..Re-enter new password", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(newPass).equals(confPass)) {
                JOptionPane.showMessageDialog(this,
                        "New Password doesn't match with Confirmed Password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            ResultSet rs = lg.showKeeper(username, oldPass);
            if (rs.next()) {
                cbtUsername.setSelectedItem(rs.getString("USERNAME"));
                txtpassCurrent.setText(rs.getString("PASSWORDS"));

                lg.editDataChange(username, oldPass, newPass);
                jLabelNotify.setVisible(true);
                JOptionPane.showMessageDialog(this, "Password Successfully Changed");
                this.dispose();
            } else {
                //lg.editDataChange(username, newPass, oldPass);
                JOptionPane.showMessageDialog(this, "invalid user name or password", "Error", JOptionPane.ERROR_MESSAGE);
                cbtUsername.setSelectedItem("");
                txtpassCurrent.setText("");
                txtpassNew.setText("");
                txtConfirmPass.setText("");

            }
            //}            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    private void txtConfirmPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmPassKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                //String newPass = String.valueOf(txtpassNew.getPassword());
                String newPass = txtpassNew.getText();
                //String newPassMD5 = MD5Password.mdFivePass(newPass);
                //String confPass = String.valueOf(txtConfirmPass.getPassword());
                String confPass = txtConfirmPass.getText();
                // String confPassMD5 = MD5Password.mdFivePass(confPass);
                //String oldPass = String.valueOf(txtpassCurrent.getPassword());
                String oldPass = txtpassCurrent.getText();
                //String oldPassMD5 = MD5Password.mdFivePass(oldPass);
                String username = cbtUsername.getSelectedItem().toString();
                //System.out.println(username);
                if (username.length() == 0) {
                    JOptionPane.showMessageDialog(this, "Please enter a username",
                            "Error", JOptionPane.ERROR_MESSAGE);
                } else if (oldPass.equals("")) {

                    JOptionPane.showMessageDialog(this, "Please enter a old password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                } else if (newPass.equals("")) {
                    JOptionPane.showMessageDialog(this, "Please enter a new password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                } else if (confPass.equals("")) {
                    JOptionPane.showMessageDialog(this, "Please enter a confirmed password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                } else if (newPass.length() < 5) {
                    JOptionPane.showMessageDialog(this,
                            "The New Password Should be of Atleast 5 Characters",
                            "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((newPass).equals(oldPass)) {
                    JOptionPane.showMessageDialog(this,
                            "Password is same..Re-enter new password", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (!(newPass).equals(confPass)) {
                    JOptionPane.showMessageDialog(this,
                            "New Password doesn't match with Confirmed Password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
                ResultSet rs = lg.showKeeper(username, oldPass);
                if (rs.next()) {
                    cbtUsername.setSelectedItem(rs.getString("USERNAME"));
                    txtpassCurrent.setText(rs.getString("PASSWORDS"));

                    lg.editDataChange(username, oldPass, newPass);
                    jLabelNotify.setVisible(true);
                    JOptionPane.showMessageDialog(this, "Password Successfully Changed");
                    this.dispose();
                } else {
                    //lg.editDataChange(username, newPass, oldPass);
                    JOptionPane.showMessageDialog(this, "invalid user name or password", "Error", JOptionPane.ERROR_MESSAGE);
                    cbtUsername.setSelectedItem("");
                    txtpassCurrent.setText("");
                    txtpassNew.setText("");
                    txtConfirmPass.setText("");

                }
                //}            
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_txtConfirmPassKeyPressed

    private void cbtUsernamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbtUsernamePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String query = "SELECT * FROM USERS WHERE ROLES NOT IN (SELECT ROLES FROM USERS WHERE ROLES = 'ADMIN') AND USERNAME = ?";
        DBconnect.loadDataTextfield(query, this.cbtUsername, this.txtpassCurrent, "PASSWORDS");
    }//GEN-LAST:event_cbtUsernamePopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new ChangePasswordJFrame().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(ChangePasswordJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnChange1;
    private javax.swing.JComboBox<String> cbtUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelNotify;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField txtConfirmPass;
    private javax.swing.JPasswordField txtpassCurrent;
    private javax.swing.JPasswordField txtpassNew;
    // End of variables declaration//GEN-END:variables
}
