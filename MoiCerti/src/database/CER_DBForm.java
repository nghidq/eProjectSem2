/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database;

import interfaces.UserFrmForm;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author David Nghi
 */
public class CER_DBForm extends javax.swing.JFrame {

    static Connection cn;
    //DBconnect dbConn = new DBconnect();
    static String host, db, acc, pass;
    static SQLVar obj;

    // String current = new java.io.File( "." ).getCanonicalPath();
    //    System.out.println("Current dir:"+current);
    //static String path="C:\\Users\\David Nghi\\Desktop\\eProject-Sem2\\eProjectSem2\\Applications\\MCerSoft\\src\\database\\config.properties";
    /**
     * Creates new form CER_DBForm
     *
     * @param parent
     * @param modal
     */
    public CER_DBForm(java.awt.Frame parent, boolean modal) {
        //super(parent, modal);

        setTitle("Setup Form");
        initComponents();
        readConfig();
        showConfig();
    }

    public static Connection getConnect() {

        try {
            readConfig();
            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
            Class.forName(driver);
            String url = "jdbc:sqlserver://" + host + ";databaseName=" + db;
            cn = DriverManager.getConnection(url, acc, pass);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            //System.out.println("Field Error");
            cn = null;
        }
        return cn;
    }

    private static void readConfig() {
        try {
            // Create Properties object.
            //File file = new File("");
            //String cerDir = System.getProperty("user.dir");
            String cerDir = new java.io.File(".").getCanonicalPath();
            //System.out.println("Current dir:"+current);
            Properties props = new Properties();

            String dbSettingsPropertyFile = cerDir + "\\config.properties";
            // Properties will use a FileReader object as input.
            FileReader fReader = new FileReader(dbSettingsPropertyFile);

            // Load jdbc related properties in above file. 
            props.load(fReader);

            // Get each property value.
            String dbDriverClass = props.getProperty("db.driver.class");

            host = props.getProperty("db.conn.url");

            db = props.getProperty("db.dbname");

            acc = props.getProperty("db.username");

            pass = props.getProperty("db.password");

//            if (!"".equals(dbDriverClass) && !"".equals(host)) {
//                /* Register jdbc driver class. */
//                Class.forName(dbDriverClass);
//
//                // Get database connection object.
//                Connection dbConn = DriverManager.getConnection(host, acc, pass);
//
//                // Get dtabase meta data.
//                DatabaseMetaData dbMetaData = dbConn.getMetaData();
//
//                // Get database name.
//                String dbName = dbMetaData.getDatabaseProductName();
//
//                // Get database version.
//                String dbVersion = dbMetaData.getDatabaseProductVersion();
//
//                System.out.println("Database Name : " + dbName);
//                
//                System.out.println("Database Version : " + dbVersion);
//            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void showConfig() {
        txtHost.setText(host);
        txtdbName.setText(db);
        txtaccSQL.setText(acc);
        txtpassSQL.setText(pass);
    }

    private void setNull() {
//Xoa trang cac JtextField

        this.txtdbName.setText(null);
        //this.txtSubID.setText(null);
        this.txtaccSQL.setText(null);
        this.txtpassSQL.setText(null);
        this.txtdbName.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbUsername1 = new javax.swing.JLabel();
        lbpassword1 = new javax.swing.JLabel();
        txtaccSQL = new javax.swing.JTextField();
        lbUsername = new javax.swing.JLabel();
        txtpassSQL = new javax.swing.JPasswordField();
        lbpassword = new javax.swing.JLabel();
        txtdbName = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        txtHost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExit.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/db_remove.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/db_status.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("LOGIN SYSTEM WITH ACCOUNT SQL SERVER");

        lbUsername1.setBackground(java.awt.Color.lightGray);
        lbUsername1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbUsername1.setText("Username SQL");

        lbpassword1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbpassword1.setText("Password SQL");

        txtaccSQL.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        lbUsername.setBackground(java.awt.Color.lightGray);
        lbUsername.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbUsername.setText("Database Name");

        txtpassSQL.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        lbpassword.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbpassword.setText("Host Name or IP");

        txtdbName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnConnect.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnConnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/db_add.png"))); // NOI18N
        btnConnect.setText("Login");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        txtHost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConnect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbpassword1)
                            .addComponent(lbUsername1)
                            .addComponent(lbpassword)
                            .addComponent(lbUsername))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpassSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdbName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaccSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbpassword)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUsername)
                    .addComponent(txtdbName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtaccSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbUsername1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbpassword1)
                    .addComponent(txtpassSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        cn = CER_DBForm.getConnect();
        if (cn == null) {
            JOptionPane.showMessageDialog(this, "Connection Fails");
            //this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        } else {
            JOptionPane.showMessageDialog(this, "Success!");
            //this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            this.setVisible(false);
            UserFrmForm frmU = null;
            try {
                frmU = new UserFrmForm();
            } catch (SQLException ex) {
                Logger.getLogger(CER_DBForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            frmU.setVisible(true);
            frmU.pack();
            frmU.setLocationRelativeTo(null);
            frmU.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        setNull();
    }//GEN-LAST:event_btnResetMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CER_DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CER_DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CER_DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CER_DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            CER_DBForm dialog = new CER_DBForm(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JLabel lbUsername1;
    private javax.swing.JLabel lbpassword;
    private javax.swing.JLabel lbpassword1;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtaccSQL;
    private javax.swing.JTextField txtdbName;
    private javax.swing.JPasswordField txtpassSQL;
    // End of variables declaration//GEN-END:variables
}
