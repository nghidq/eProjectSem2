/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import aplication.Certificated;
import aplication.ReportCertificate;
import database.DBconnect;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author David Nghi
 */
public class CertificateJFrame extends javax.swing.JFrame {

    private final Certificated cerObj = new Certificated();
    private boolean flag = true;
    private final DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form CertificateJFrame
     */
    private void showDataCer() throws SQLException {
        ResultSet result = cerObj.showCertificate();
        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[3];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã so)
                rows[1] = result.getString(2);
                rows[2] = result.getString(3);

                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel
            }
        } catch (SQLException e) {
        }
    }
//Ham xoa du lieu trong tableModel

    private void clearData() throws SQLException {
//Lay chi so dong cuoi cung
        int n = tableModel.getRowCount() - 1;
        for (int i = n; i >= 0; i--) {
            tableModel.removeRow(i);//Remove tung dong
        }
    }

    private void setNull() {
//Xoa trang cac JtextField

        this.txtCerName.setText(null);
        this.txtCerNum.setText(null);
        this.txtCerName.requestFocus();
    }
//Ham khoa cac TextField

    private void setClockID(boolean a) {
//Khoa hoac mo khoa cho Cac JTextField
        this.txtCerID.setEnabled(!a);
    }

    private void setClock(boolean a) {
//Khoa hoac mo khoa cho Cac JTextField
        this.txtCerName.setEnabled(!a);
        this.txtCerNum.setEnabled(!a);
    }
//Ham khoa cac Button

    private void setButton(boolean a) {
//Vo hieu hoac co hieu luc cho cac JButton
        this.btnAddCer.setEnabled(a);
        this.btnDeleteCer.setEnabled(a);
        this.btnEditCer.setEnabled(a);
        this.btnSaveCer.setEnabled(!a);
        this.btnReportCer.setEnabled(!a);
        this.btnResetCer.setEnabled(!a);
        this.btnCloseCer.setEnabled(a);
    }

    private void disableForm() {

        this.txtCerName.setEditable(false);
        this.txtCerNum.setEditable(false);
    }

    private void enableForm() {
        this.txtCerName.setEditable(true);
        this.txtCerNum.setEditable(true);
    }

    public CertificateJFrame() throws SQLException {
        initComponents();
        jLabelNotify.setVisible(false);
        String[] colsName = {"CERTIFICATE ID", "CERTIFICATE NAME", "CERTIFICATE NUMBER"};
// đặt tiêu đề cột cho tableModel
        tableModel.setColumnIdentifiers(colsName);
// kết nối jtable với tableModel
        jTableCertificate.setModel(tableModel);
//gọi hàm ShowData để đưa dữ liệu vào tableModel
        showDataCer();
        txtCerID.setText(DBconnect.getID("EXECUTE sp_CERTIFICATE_identityID"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCerID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnEditCer = new javax.swing.JButton();
        btnDeleteCer = new javax.swing.JButton();
        btnSaveCer = new javax.swing.JButton();
        btnResetCer = new javax.swing.JButton();
        btnAddCer = new javax.swing.JButton();
        btnReportCer = new javax.swing.JButton();
        btnCloseCer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCertificate = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtCerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCerNum = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabelNotify = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/certificateid.png"))); // NOI18N
        jLabel1.setText("Certificate ID");

        btnEditCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnEditCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        btnEditCer.setText("Edit");
        btnEditCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditCerMouseClicked(evt);
            }
        });

        btnDeleteCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnDeleteCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnDeleteCer.setText("Delete");
        btnDeleteCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteCerMouseClicked(evt);
            }
        });

        btnSaveCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnSaveCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnSaveCer.setText("Save");
        btnSaveCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveCerMouseClicked(evt);
            }
        });

        btnResetCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnResetCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reset1.png"))); // NOI18N
        btnResetCer.setText("Reset");
        btnResetCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetCerMouseClicked(evt);
            }
        });

        btnAddCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnAddCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        btnAddCer.setText("Add");
        btnAddCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddCerMouseClicked(evt);
            }
        });

        btnReportCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnReportCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/report.png"))); // NOI18N
        btnReportCer.setText("Report");
        btnReportCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnReportCerMousePressed(evt);
            }
        });

        btnCloseCer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnCloseCer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        btnCloseCer.setText("Close");
        btnCloseCer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseCerMouseClicked(evt);
            }
        });
        btnCloseCer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseCerActionPerformed(evt);
            }
        });

        jTableCertificate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Certificate ID", "Certificate Name", "Certificate Num"
            }
        ));
        jTableCertificate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCertificateMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCertificate);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/certicatename.png"))); // NOI18N
        jLabel2.setText("Certificate Name");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/numberofcertificate.png"))); // NOI18N
        jLabel3.setText("Number of Certificate");

        jLabelNotify.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabelNotify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/notify.png"))); // NOI18N
        jLabelNotify.setText("Notify: Database has been Successfully");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNotify)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabelNotify)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAddCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnSaveCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnReportCer)
                                .addGap(18, 18, 18)
                                .addComponent(btnCloseCer))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCerID, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCerName, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(51, 51, 51)
                                        .addComponent(txtCerNum, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCerID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCerName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCerNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCer)
                    .addComponent(btnEditCer)
                    .addComponent(btnDeleteCer)
                    .addComponent(btnSaveCer)
                    .addComponent(btnResetCer)
                    .addComponent(btnCloseCer)
                    .addComponent(btnReportCer))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCerMouseClicked
        // TODO add your handling code here:
        setClockID(true);
        setNull();//Xoa trang TextField
        setClock(false);//Mo khoa TextField
        setButton(false);//Goi ham khoa cac Button
        flag = true;//Gan cothem = true de ghi nhan trang thai them moi
        txtCerID.setText(DBconnect.getID("EXECUTE sp_CERTIFICATE_identityID"));
    }//GEN-LAST:event_btnAddCerMouseClicked

    private void jTableCertificateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCertificateMouseClicked
        // TODO add your handling code here:
        try {
            //Lay chi so dong dang chon

            int row = this.jTableCertificate.getSelectedRow();
            TableModel model = jTableCertificate.getModel();
            String cerID = (this.jTableCertificate.getModel().getValueAt(row, 0)).toString();
            ResultSet rs = cerObj.showIDCer(cerID);//Goi ham lay du lieu theo ma loai

            if (rs.next()) {
                this.txtCerID.setText(rs.getString("CERTIFICATE_ID"));
                this.txtCerName.setText(rs.getString("CERTIFICATE_NAME"));
                this.txtCerNum.setText(rs.getString("CERTIFICATE_NUM"));
            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_jTableCertificateMouseClicked

    private void btnSaveCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveCerMouseClicked
        // TODO add your handling code here:
        String id = txtCerID.getText();
        String name = txtCerName.getText();
        String num = txtCerNum.getText();
        if (name.length() < 10 || name.length() > 100 || name.isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Name cannot empty. Name include contain from 20 to 100 characters!", "Message", 1);
            txtCerName.requestFocus();
        } else {
            try {
                if (flag == true) {
                    txtCerName.setText(DBconnect.getName("EXEC sp_InsertCERTIFICATE_ABC '" + name + "'"));
                    jLabelNotify.setVisible(true);
                } else {
                    cerObj.editData(id, name, num);
                    //txtCerName.setText(DBconnect.getName("EXEC sp_UpdateCER_NAME '" + id + "'"));
                    jLabelNotify.setVisible(true);

                }
                clearData(); //goi ham xoa du lieu tron tableModel
                showDataCer(); //Do lai du lieu vao Table Model
            } catch (SQLException e) {
            }
            setClock(false);
            setButton(true);
        }
    }//GEN-LAST:event_btnSaveCerMouseClicked

    private void btnDeleteCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteCerMouseClicked
        // TODO add your handling code here:
        jLabelNotify.setVisible(false);
        String id = txtCerID.getText();
        try {
            if (id.length() == 0) {
                JOptionPane.showMessageDialog(null, "Choose a ID item for delete",
                        "Message", 1);
            } else {
                if (JOptionPane.showConfirmDialog(null, "Do you want to delete " + id + " this item ? ", "Message", 2) == 0) {
                    cerObj.deleteData(id);//goi ham xoa du lieu theo ma loai
                    clearData();//Xoa du lieu trong tableModel
                    showDataCer();//Do du lieu vao table Model
                    setNull();//Xoa trang Textfield
                    jLabelNotify.setVisible(true);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Fail", "Message", 1);
        }
    }//GEN-LAST:event_btnDeleteCerMouseClicked

    private void btnEditCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditCerMouseClicked
        // TODO add your handling code here:
        String id = txtCerID.getText();
        //String name = txtCerName.getText();
        if (id.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a id item for edit",
                    "Message", 1);
        } else {
            setClock(false);//Mo khoa cac TextField
            this.txtCerID.enable(false);
            setButton(false); //Khoa cac Button
            flag = false; //Gan cothem=false de ghi nhan trang thai la sua
        }
    }//GEN-LAST:event_btnEditCerMouseClicked

    private void btnCloseCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseCerMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new HomeJFrame().setVisible(true);
    }//GEN-LAST:event_btnCloseCerMouseClicked

    private void btnResetCerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetCerMouseClicked
        // TODO add your handling code here:
        setNull();
        setClock(true);
        setButton(true);
    }//GEN-LAST:event_btnResetCerMouseClicked

    private void btnCloseCerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseCerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseCerActionPerformed

    private void btnReportCerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportCerMousePressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:exportELSX()
            new ReportCertificate().exportELSX();
        } catch (IOException ex) {
            Logger.getLogger(CourseJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //ReportCertificate.ExportExcel(jTableCertificate);
    }//GEN-LAST:event_btnReportCerMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CertificateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CertificateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CertificateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CertificateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new CertificateJFrame().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(CertificateJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCer;
    private javax.swing.JButton btnCloseCer;
    private javax.swing.JButton btnDeleteCer;
    private javax.swing.JButton btnEditCer;
    private javax.swing.JButton btnReportCer;
    private javax.swing.JButton btnResetCer;
    private javax.swing.JButton btnSaveCer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelNotify;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCertificate;
    private javax.swing.JTextField txtCerID;
    private javax.swing.JTextField txtCerName;
    private javax.swing.JTextField txtCerNum;
    // End of variables declaration//GEN-END:variables
}
